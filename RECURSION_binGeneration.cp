//
//  main.cpp
//  cppEdu
//
//  Created by Николай Кутузов on 22.09.2021.
//
//__________________________________________________________________________________
//                   РЕКУРСИЯ на примере ГЕНЕРАЦИИ ДВОИЧНЫХ ЧИСЕЛ.                  |
//                                                                                  |
//  Постановка задачи:                                                              |
//  Нужно сгенерировать какое-то количество возможных двоичных чисел. Это количество|
//  будет зависеть от введенного пользователем с клавиатуры количества разрядов.    |
//                                                                                  |
//      Теория:                                                                     |
//                                                                                  |
//                                      ^                                           |
//                                     / \                                          |
// Первый разряд равен НУЛЮ (bit = 0) /   \   Первый разряд равен ЕДИНИЦЕ (bit = 1) |
//                                   /     \                                        |
//                                  /       \                                       |
//                                 0         1                                      |
//                                /\         /\                                     |
//                               /  \       /  \                                    |
//                              0    1     0    1                                   |
//                             / \  / \   / \  / \                                  |
//        крайний случай --->  0 1  0 1   0 1  0 1 <---- крайний случай             |
//                                                                                  |
//  Решение:                                                                        |
//  Все решение выполняет функция:                                                  |
//                                                                                  |
//  void generateBinaryNumbers(int digitsLeftToGenerate){                           |
//      static int digitsCombination[100];                                          |
//      static int top = 0;                                                         |
//      if (digitsLeftToGenerate == 0){                                             |
//          for (int i = 0; i < top; ++i)                                           |
//              std::cout << digitsCombination[i];                                  |
//          std::cout << '\n';                                                      |
//      } else {                                                                    |
//          digitsCombination[top] = 0;                                             |
//          ++top;                                                                  |
//          generateBinaryNumbers(digitsLeftToGenerate - 1);                        |
//          --top;                                                                  |
//          digitsCombination[top] = 1;                                             |
//          ++top;                                                                  |
//          generateBinaryNumbers(digitsLeftToGenerate - 1);                        |
//          --top;                                                                  |
//      }                                                                           |
//   }                                                                              |
//                                                                                  |
//  Рассмотрим работу функции с параметром digitsLeftToGenerate = 3:                |
//                                                                                  |
//  1. static int digitsCombination[100]; - создается статический массив для        |
//  хранения префиксов                                                              |
//  2. static int top = 0; - создается статическая переменная для обозначения       |
//  индекса разряда                                                                 |
//  3. проверяется условие if (digitsLeftToGenerate == 0), в нашем случае 3 != 0,   |
//  после проверки переходим в раздел else                                          |
//  4. помещаем в массив, в НУЛЕВОЙ индекс, значение [0]                            |
//  5. прибавляем к индексу 1, то есть 0 + 1, top = 1                               |
//  6. рекурсивно вызываем функцию с параметром на единицу меньше, то есть gBN(2)   |
//  инициализация массива и переменной top пропускается, так как они СТАТИЧНЫ!      |
//  7. проверяется условие if (digitsLeftToGenerate == 0), в нашем случае 2 != 0,   |
//  после проверки переходим в раздел else                                          |
//  8. помещаем в массив, в ПЕРВЫЙ индекс, значение [0]                             |
//  9. прибавляем к индексу 1, то есть 1 + 1, top = 2                               |
//  ПОМНИМ! переменная top и массив digitsCombination у нас статичны!!! А значит    |
//  они не инициализируются повторно и инкриментом/декриментом меняют свои значения!|
//  10. рекурсивно вызываем функцию с параметром на единицу меньше, то есть gBN(1)  |
//  инициализация массива и переменной top пропускается, так как они СТАТИЧНЫ!      |
//  11. проверяется условие if (digitsLeftToGenerate == 0), в нашем случае 1 != 0,  |
//  после проверки переходим в раздел else                                          |
//  12. помещаем в массив, во ВТОРОЙ индекс, значение [0]                           |
//  ПОМНИМ! переменная top и массив digitsCombination у нас статичны!!! А значит    |
//  они не инициализируются повторно и инкриментом/декриментом меняют свои значения!|
//  13. прибавляем к индексу 1, то есть 2 + 1, top = 3                              |
//  14. рекурсивно вызываем функцию с параметром на единицу меньше, то есть gBN(0)  |
//  инициализация массива и переменной top пропускается, так как они СТАТИЧНЫ!      |
//  15. проверяется условие if (digitsLeftToGenerate == 0), в нашем случае 0 == 0,  |
//  после проверки:                                                                 |
//          for (int i = 0; i < top; ++i)                                           |
//              std::cout << digitsCombination[i];                                  |
//          std::cout << '\n';                                                      |
//  Распечатываем 000                                                               |
//  16. так как gBN(0) отработала, мы возвращаемся в gBN(1) и переходим в строку    |
//  ПОСЛЕ ПЕРВОГО вызова gBN(0)                                                     |
//  17. уменьшаем top на 1, то есть 3 - 1, top = 2                                  |
//  18. помещаем в массив, во ВТОРОЙ индекс, значение [1]                           |
//  ПОМНИМ! переменная top и массив digitsCombination у нас статичны!!! А значит    |
//  они не инициализируются повторно и инкриментом/декриментом меняют свои значения!|
//  19. прибавляем к индексу 1, то есть 2 + 1, top = 3                              |
//  20. рекурсивно вызываем функцию с параметром на единицу меньше, то есть gBN(0)  |
//  инициализация массива и переменной top пропускается, так как они СТАТИЧНЫ!      |
//  21. проверяется условие if (digitsLeftToGenerate == 0), в нашем случае 0 == 0,  |
//  Распечатываем 001                                                               |
//  22. так как gBN(0) отработала, мы возвращаемся в gBN(1) и переходим в строку    |
//  ПОСЛЕ ВТОРОГО вызова gBN(0)                                                     |
//  23. отнимаем от индекса 1, то есть 3 - 1, top = 2                               |
//  24. так как gBN(1) отработала, мы возвращаемся в gBN(2) и переходим в строку    |
//  ПОСЛЕ ПЕРВОГО вызова gBN(1)                                                     |
//  25. уменьшаем top на 1, то есть 2 - 1, top = 1                                  |
//  26. помещаем в массив, в ПЕРВЫЙ индекс, значение [1]                            |
//  27. прибавляем к индексу 1, то есть 1 + 1, top = 2                              |
//  28. рекурсивно вызываем функцию с параметром на единицу меньше, то есть gBN(1)  |
//  инициализация массива и переменной top пропускается, так как они СТАТИЧНЫ!      |
//  29. проверяется условие if (digitsLeftToGenerate == 0), в нашем случае 1 != 0,  |
//  после проверки переходим в раздел else                                          |
//  30. помещаем в массив, во ВТОРОЙ индекс, значение [0]                           |
//  ПОМНИМ! переменная top и массив digitsCombination у нас статичны!!! А значит    |
//  они не инициализируются повторно и инкриментом/декриментом меняют свои значения!|
//  31. прибавляем к индексу 1, то есть 2 + 1, top = 3                              |
//  32. рекурсивно вызываем функцию с параметром на единицу меньше, то есть gBN(0)  |
//  инициализация массива и переменной top пропускается, так как они СТАТИЧНЫ!      |
//  33. проверяется условие if (digitsLeftToGenerate == 0), в нашем случае 0 == 0,  |
//  Распечатываем 010                                                               |
//  34. так как gBN(0) отработала, мы возвращаемся в gBN(1) и переходим в строку    |
//  ПОСЛЕ ПЕРВОГО вызова gBN(0)                                                     |
//  35. отнимаем от индекса 1, то есть 3 - 1, top = 2                               |
//  36. помещаем в массив, во ВТОРОЙ индекс, значение [1]                           |
//  37. прибавляем к индексу 1, то есть 2 + 1, top = 3                              |
//  38. рекурсивно вызываем функцию с параметром на единицу меньше, то есть gBN(0)  |
//  инициализация массива и переменной top пропускается, так как они СТАТИЧНЫ!      |
//  39. проверяется условие if (digitsLeftToGenerate == 0), в нашем случае 0 == 0,  |
//  Распечатываем 011                                                               |
//  40. так как gBN(0) отработала, мы возвращаемся в gBN(1) и переходим в строку    |
//  ПОСЛЕ ВТОРОГО вызова gBN(0)                                                     |
//  41. уменьшаем top на 1, то есть 3 - 1, top = 2                                  |
//  42. так как в функция была вызвана из ВТОРОГО рекурсивного вызова в функции     |
//  gBN(2), то мы переходим к последней строке функции gBN(2)                       |
//  43. уменьшаем top на 1, то есть 2 - 1, top = 1                                  |
//  44. возвращаемся в функцию gBN(3), в строку после ПЕРВОГО вызова функции gBN(2) |
//  45. уменьшаем top на 1, то есть 1 - 1, top = 0                                  |
//  46. помещаем в массив, в НУЛЕВОЙ индекс, значение [1]                           |
//  47. прибавляем к индексу 1, то есть 0 + 1, top = 1                              |
//  48. рекурсивно вызываем функцию с параметром на единицу меньше, то есть gBN(2)  |
//  инициализация массива и переменной top пропускается, так как они СТАТИЧНЫ!      |
//  49. проверяется условие if (digitsLeftToGenerate == 0), в нашем случае 2 != 0,  |
//  после проверки переходим в раздел else                                          |
//  50. помещаем в массив, в ПЕРВЫЙ индекс, значение [0]                            |
//  51. прибавляем к индексу 1, то есть 1 + 1, top = 2                              |
//  ПОМНИМ! переменная top и массив digitsCombination у нас статичны!!! А значит    |
//  они не инициализируются повторно и инкриментом/декриментом меняют свои значения!|
//  52. рекурсивно вызываем функцию с параметром на единицу меньше, то есть gBN(1)  |
//  инициализация массива и переменной top пропускается, так как они СТАТИЧНЫ!      |
//  53. проверяется условие if (digitsLeftToGenerate == 0), в нашем случае 1 != 0,  |
//  после проверки переходим в раздел else                                          |
//  54. помещаем в массив, во ВТОРОЙ индекс, значение [0]                           |
//  ПОМНИМ! переменная top и массив digitsCombination у нас статичны!!! А значит    |
//  они не инициализируются повторно и инкриментом/декриментом меняют свои значения!|
//  55. прибавляем к индексу 1, то есть 2 + 1, top = 3                              |
//  56. рекурсивно вызываем функцию с параметром на единицу меньше, то есть gBN(0)  |
//  инициализация массива и переменной top пропускается, так как они СТАТИЧНЫ!      |
//  57. проверяется условие if (digitsLeftToGenerate == 0), в нашем случае 0 == 0,  |
//  Распечатываем 100                                                               |
//  58. так как gBN(0) отработала, мы возвращаемся в gBN(1) и переходим в строку    |
//  ПОСЛЕ ПЕРВОГО вызова gBN(0)                                                     |
//  59. уменьшаем top на 1, то есть 3 - 1, top = 2                                  |
//  60. помещаем в массив, во ВТОРОЙ индекс, значение [1]                           |
//  ПОМНИМ! переменная top и массив digitsCombination у нас статичны!!! А значит    |
//  они не инициализируются повторно и инкриментом/декриментом меняют свои значения!|
//  61. прибавляем к индексу 1, то есть 2 + 1, top = 3                              |
//  62. рекурсивно вызываем функцию с параметром на единицу меньше, то есть gBN(0)  |
//  инициализация массива и переменной top пропускается, так как они СТАТИЧНЫ!      |
//  63. проверяется условие if (digitsLeftToGenerate == 0), в нашем случае 0 == 0,  |
//  Распечатываем 101                                                               |
//  64. так как gBN(0) отработала, мы возвращаемся в gBN(1) и переходим в строку    |
//  ПОСЛЕ ВТОРОГО вызова gBN(0)                                                     |
//  65. уменьшаем top на 1, то есть 3 - 1, top = 2                                  |
//  66. так как в функция была вызвана из ПЕРВОГО рекурсивного вызова в функции     |
//  gBN(2), то мы переходим к строке, следующей после ПЕРВОГО вызова функции gBN(1) |
//  67. уменьшаем top на 1, то есть 2 - 1, top = 1                                  |
//  68. помещаем в массив, в ПЕРВЫЙ индекс, значение [1]                            |
//  69. рекурсивно вызываем функцию с параметром на единицу меньше, то есть gBN(1)  |
//  инициализация массива и переменной top пропускается, так как они СТАТИЧНЫ!      |
//  70. проверяется условие if (digitsLeftToGenerate == 0), в нашем случае 1 != 0,  |
//  после проверки переходим в раздел else                                          |
//  71. помещаем в массив, во ВТОРОЙ индекс, значение [0]                           |
//  ПОМНИМ! переменная top и массив digitsCombination у нас статичны!!! А значит    |
//  они не инициализируются повторно и инкриментом/декриментом меняют свои значения!|
//  72. прибавляем к индексу 1, то есть 2 + 1, top = 3                              |
//  73. рекурсивно вызываем функцию с параметром на единицу меньше, то есть gBN(0)  |
//  инициализация массива и переменной top пропускается, так как они СТАТИЧНЫ!      |
//  74. проверяется условие if (digitsLeftToGenerate == 0), в нашем случае 0 == 0,  |
//  Распечатываем 110                                                               |
//  75. так как gBN(0) отработала, мы возвращаемся в gBN(1) и переходим в строку    |
//  ПОСЛЕ ПЕРВОГО вызова gBN(0)                                                     |
//  76. уменьшаем top на 1, то есть 3 - 1, top = 2                                  |
//  77. помещаем в массив, во ВТОРОЙ индекс, значение [1]                           |
//  78. прибавляем к индексу 1, то есть 2 + 1, top = 3                              |
//  79. рекурсивно вызываем функцию с параметром на единицу меньше, то есть gBN(0)  |
//  инициализация массива и переменной top пропускается, так как они СТАТИЧНЫ!      |
//  80. проверяется условие if (digitsLeftToGenerate == 0), в нашем случае 0 == 0,  |
//  Распечатываем 111                                                               |
//  81. возвращаемся в функцию gBN(1) - она отработала                              |
//  82. уменьшаем top на 1, то есть 3 - 1, top = 2                                  |
//  83. возвращаемся в функцию gBN(2) - она отработала                              |
//  84. уменьшаем top на 1, то есть 2 - 1, top = 1                                  |
//  85. возвращаемся в функцию gBN(3) - она отработала                              |
//  86. уменьшаем top на 1, то есть 1 - 1, top = 0                                  |
//  87. возвращаемся в функцию main()                                               |
//__________________________________________________________________________________|
//  ___________                                                                     |
//  |  main() |                                                                     |
//  -----------                                                                     |
//     |    __________________                                                      |
//     |-->|  gBN(3) top = 0  |                                                     |
//     |   |if(false) dC[0]=0 |                                                     |
//     |   |   top = 0 + 1    |                                                     |
//     |    ------------------                                                      |
//     |        |    __________________                                             |
//     |        |-->|  gBN(2) top = 1  |                                            |
//     |        |   |if(false) dC[1]=0 |                                            |
//     |        |   |   top = 1 + 1    |                                            |
//     |        |    ------------------                                             |
//     |        |       |    __________________                                     |
//     |        |       |-->|  gBN(1) top = 2  |                                    |
//     |        |       |   |if(false) dC[2]=0 |                                    |
//     |        |       |   |   top = 2 + 1    |                                    |
//     |        |       |    ------------------                                     |
//     |        |       |       |    __________________                             |
//     |        |       |       |-->|  gBN(0) top = 3  |                            |
//     |        |       |       |   |     if(true)     |                            |
//     |        |       |       |   |    PRINT: 000    |                            |
//     |        |       |       |    ------------------                             |
//     |        |       |       |                |                                  |
//     |        |       |       |<---------------|                                  |
//     |        |       |       |    ____________                                   |
//     |        |       |       |-->|top = 3 - 1 |                                  |
//     |        |       |       |    ------------                                   |
//     |        |       |       |    ____________                                   |
//     |        |       |       |-->|    top=2   |                                  |
//     |        |       |       |   |  dC[2] = 1 |                                  |
//     |        |       |       |    ------------                                   |
//     |        |       |       |    ____________                                   |
//     |        |       |       |-->|top = 2 + 1 |                                  |
//     |        |       |       |    ------------                                   |
//     |        |       |       |    __________________                             |
//     |        |       |       |-->|  gBN(0) top = 3  |                            |
//     |        |       |       |   |     if(true)     |                            |
//     |        |       |       |   |    PRINT: 001    |                            |
//     |        |       |       |    ------------------                             |
//     |        |       |       |                |                                  |
//     |        |       |       |<---------------|                                  |
//     |        |       |       |    ____________                                   |
//     |        |       |       |-->|top = 3 - 1 |                                  |
//     |        |       |       |    ------------                                   |
//     |        |       |<------x                                                   |
//     |        |       |                                                           |
//     |        |       |    ____________                                           |
//     |        |       |-->|top = 2 - 1 |                                          |
//     |        |       |    ------------                                           |
//     |        |       |    __________________                                     |
//     |        |       |-->|     top = 1      |                                    |
//     |        |       |   |     dC[1]=1      |                                    |
//     |        |       |   |   top = 1 + 1    |                                    |
//     |        |       |    ------------------                                     |
//     |        |       |    __________________                                     |
//     |        |       |-->|  gBN(1) top = 2  |                                    |
//     |        |       |   |if(false) dC[2]=0 |                                    |
//     |        |       |   |   top = 2 + 1    |                                    |
//     |        |       |    ------------------                                     |
//     |        |       |                |                                          |
//     |        |       |                |    __________________                    |
//     |        |       |                |-->|  gBN(0) top = 3  |                   |
//     |        |       |                |   |     if(true)     |                   |
//     |        |       |                |   |    PRINT: 010    |                   |
//     |        |       |                |    ------------------                    |
//     |        |       |                |                |                         |
//     |        |       |                |<---------------|                         |
//     |        |       |                |    ____________                          |
//     |        |       |                |-->|top = 3 - 1 |                         |
//     |        |       |                |    ------------                          |
//     |        |       |                |    __________________                    |
//     |        |       |                |-->|     top = 2      |                   |
//     |        |       |                |   |     dC[2]=1      |                   |
//     |        |       |                |   |   top = 2 + 1    |                   |
//     |        |       |                |    ------------------                    |
//     |        |       |                |    __________________                    |
//     |        |       |                |-->|  gBN(0) top = 3  |                   |
//     |        |       |                |   |     if(true)     |                   |
//     |        |       |                |   |    PRINT: 011    |                   |
//     |        |       |                |    ------------------                    |
//     |        |       |                |                |                         |
//     |        |       |                |<---------------|                         |
//     |        |       |                |    ____________                          |
//     |        |       |                |-->|top = 3 - 1 |                         |
//     |        |       |                |    ------------                          |
//     |        |       x<---------------x                                          |
//     |        |       |                                                           |
//     |        |       |    ____________                                           |
//     |        |       |-->|top = 2 - 1 |                                          |
//     |        |       |    ------------                                           |
//     |        |<------x                                                           |
//     |        |                                                                   |
//     |        |    ____________                                                   |
//     |        |-->|top = 1 - 1 |                                                  |
//     |        |    ------------                                                   |
//     |        |    __________________                                             |
//     |        |-->|      top = 0     |                                            |
//     |        |   |      dC[0]=1     |                                            |
//     |        |   |   top = 0 + 1    |                                            |
//     |        |    ------------------                                             |
//     |        |    __________________                                             |
//     |        |-->|  gBN(2) top = 1  |                                            |
//     |        |   |if(false) dC[1]=0 |                                            |
//     |        |   |   top = 1 + 1    |                                            |
//     |        |    ------------------                                             |
//     |        |       |    __________________                                     |
//     |        |       |-->|  gBN(1) top = 2  |                                    |
//     |        |       |   |if(false) dC[2]=0 |                                    |
//     |        |       |   |   top = 2 + 1    |                                    |
//     |        |       |    ------------------                                     |
//     |        |       |       |    __________________                             |
//     |        |       |       |-->|  gBN(0) top = 3  |                            |
//     |        |       |       |   |     if(true)     |                            |
//     |        |       |       |   |    PRINT: 100    |                            |
//     |        |       |       |    ------------------                             |
//     |        |       |       |                |                                  |
//     |        |       |       |<---------------|                                  |
//     |        |       |       |    ____________                                   |
//     |        |       |       |-->|top = 3 - 1 |                                  |
//     |        |       |       |    ------------                                   |
//     |        |       |       |    ____________                                   |
//     |        |       |       |-->|    top=2   |                                  |
//     |        |       |       |   |  dC[2] = 1 |                                  |
//     |        |       |       |    ------------                                   |
//     |        |       |       |    ____________                                   |
//     |        |       |       |-->|top = 2 + 1 |                                  |
//     |        |       |       |    ------------                                   |
//     |        |       |       |    __________________                             |
//     |        |       |       |-->|  gBN(0) top = 3  |                            |
//     |        |       |       |   |     if(true)     |                            |
//     |        |       |       |   |    PRINT: 101    |                            |
//     |        |       |       |    ------------------                             |
//     |        |       |       |                |                                  |
//     |        |       |       |<---------------|                                  |
//     |        |       |       |    ____________                                   |
//     |        |       |       |-->|top = 3 - 1 |                                  |
//     |        |       |       |    ------------                                   |
//     |        |       |<------x                                                   |
//     |        |       |    ____________                                           |
//     |        |       |-->|top = 2 - 1 |                                          |
//     |        |       |    ------------                                           |
//     |        |       |    __________________                                     |
//     |        |       |-->|     top = 1      |                                    |
//     |        |       |   |     dC[1]=1      |                                    |
//     |        |       |   |   top = 1 + 1    |                                    |
//     |        |       |    ------------------                                     |
//     |        |       |    __________________                                     |
//     |        |       |-->|  gBN(1) top = 2  |                                    |
//     |        |       |   |if(false) dC[2]=0 |                                    |
//     |        |       |   |   top = 2 + 1    |                                    |
//     |        |       |    ------------------                                     |
//     |        |       |       |    __________________                             |
//     |        |       |       |-->|  gBN(0) top = 3  |                            |
//     |        |       |       |   |     if(true)     |                            |
//     |        |       |       |   |    PRINT: 110    |                            |
//     |        |       |       |    ------------------                             |
//     |        |       |       |                |                                  |
//     |        |       |       |<---------------|                                  |
//     |        |       |       |    ____________                                   |
//     |        |       |       |-->|top = 3 - 1 |                                  |
//     |        |       |       |    ------------                                   |
//     |        |       |       |    ____________                                   |
//     |        |       |       |-->|    top=2   |                                  |
//     |        |       |       |   |  dC[2] = 1 |                                  |
//     |        |       |       |    ------------                                   |
//     |        |       |       |    ____________                                   |
//     |        |       |       |-->|top = 2 + 1 |                                  |
//     |        |       |       |    ------------                                   |
//     |        |       |       |    __________________                             |
//     |        |       |       |-->|  gBN(0) top = 3  |                            |
//     |        |       |       |   |     if(true)     |                            |
//     |        |       |       |   |    PRINT: 111    |                            |
//     |        |       |       |    ------------------                             |
//     |        |       |       |                |                                  |
//     |        |       |       |<---------------|                                  |
//     |        |       |       |    ____________                                   |
//     |        |       |       |-->|top = 3 - 1 |                                  |
//     |        |       |       |    ------------                                   |
//     |        |       |<------x                                                   |
//     |        |       |    ____________                                           |
//     |        |       |-->|top = 2 - 1 |                                          |
//     |        |       |    ------------                                           |
//     |        |<------x                                                           |
//     |        |    ____________                                                   |
//     |        |-->|top = 1 - 1 |                                                  |
//     |        |    ------------                                                   |
//     |<-------x                                                                   |
//__________________________________________________________________________________|
#include <iostream>

// создадим глобальную константу для удобства прочтения кода
// константа будет использована для опеределения дины массива в функции
const int maxBinaryDigitsToGenerate = 100;

// объявление функции
void generateBinaryNumbers(int digitsLeftToGenerate);

int main(int argc, const char * argv[]) {
    int countOfBits;
    std::cout << "Введите количество разрядов: ";
    std::cin >> countOfBits;

    generateBinaryNumbers(countOfBits);
    
    return 0;
}

// определение функции:
void generateBinaryNumbers(int digitsLeftToGenerate){
    // локальный статический массив для хранения предварительных решений-ПРЕФЕКСОВ!
    // статический - то есть он создается НЕ на СТЕКЕ, один на всю глубину рекурсии
    // хотя это массив и следующая переменная top будут существовать еще до
    // входа в функцию, сразу после компиляции!
    static int digitsCombination[maxBinaryDigitsToGenerate];
    // уровень заполнения массива digitsCombination
    static int top = 0;
    // если количество цифр для генерации равно НУЛЮ, сгенерирована вся длини
    if (digitsLeftToGenerate == 0){ // КРАЙНИЙ СЛУЧАЙ
        // распечатываем digitsCombination в пределах top
        for (int i = 0; i < top; ++i)
            std::cout << digitsCombination[i];
        std::cout << '\n';
    } else {                        // РЕКУРРЕНТНЫЙ СЛУЧАЙ
        // кладем в первый (то есть нулевой) разряд НОЛЬ
        digitsCombination[top] = 0;
        // переходим к следующему разряду
        ++top;
        // вызываем функцию рекуррентно
        generateBinaryNumbers(digitsLeftToGenerate - 1);
        // переходим к предыдущему разряду
        --top;
        // кладем в первый (то есть нулевой) разряд НОЛЬ
        // и переходим к следующему разряду
                                        // аналогично будет:
        digitsCombination[top++] = 1;   // digitsCombination[top] = 0;
                                        // ++top;
        // вызываем функцию рекуррентно
        generateBinaryNumbers(digitsLeftToGenerate - 1);
        // переходим к предыдущему разряду
        --top;
    }
}
