//
//  main.cpp
//  cppEdu
//
//  Created by Николай Кутузов on 23.08.2021.
//
/*
//__________________________________________
  Имеем двумерный массив arr[N][M], где     |
   N - высота (строки) массива,             |
   M - ширина (стобцы) массива.             |
      0   1   2   3<- j                     |
0    [ ] [ ] [ ] [ ] ->                     |
  ____________________|                     |
1 |->[ ] [ ] [ ] [ ] ->                     |
  ____________________|                     |
2 |->[ ] [ ] [ ] [ ]                        |
^                 ^                         |
i             arr[2][3]                     |
                                            |
    Допустим i = 2 j = 3, N = 3, M = 4      |
             p - указатель                  |
    arr[i][j] = *( p + i * M + j )          |
    arr[2][3] = *( 0 + 2 * 4 + 3 ) = *(11)  |
                     ^          ^           |
                     | смещение |           |
         или  = p[i * M + j]                |
              = p[2 * 4 + 3] = p[11]        |
                                            |
    если есть одномерный массив:            |
              b[i] == *(b + i)              |
//__________________________________________|
*/

 #include <iostream>

int main(int argc, const char * argv[]) {
    int N, M;
    std::cout << "Введите количество строк: ";
    std::cin >> N;
    std::cout << "Введите количество столбцов: ";
    std::cin >> M;
    
    int arr[N][M];                      // N - строки M - столбцы
    for (int i = 0; i < N; ++i) {       // i - номер строки
        for (int j = 0; j < M; ++j) {   // j - номер столбца
            arr[i][j] = i * M + j + 1;
        }
    }
    
    for (int i = 0; i < N; ++i) {
        for (int j = 0; j < M; ++j) {
            std::cout << arr[i][j] << '\t';
        }
        std::cout << std::endl;
    }
    
    std::cout << "Пробежимся по памяти:\n";
    int *p = reinterpret_cast<int*>(arr);
    for (int i = 0; i < N * M; ++i){
        std::cout << p[i] << ' ';
    }
    std::cout << '\n';
    
    return 0;
}
