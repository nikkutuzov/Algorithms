//
//  main.cpp
//
//  cppEdu
//
//  Created by Николай Кутузов on 13.09.2021.
//
//__________________________________________________________________________________
//                  РЕКУРСИЯ на НЕбыстрого возведения в степень.                    |
//                                                                                  |
//  Постановка задачи:                                                              |
//  Есть число a, которое нужно возвести в степень n. Первое, что приходит в голову |
//  1 * a * a * a... и так n раз. Ну как-то не очень :(                             |
//                                                                                  |
//  Можно попробовать решить рекуррентно,                                           |
//  тогда имеем:                                                                    |
//                        | a^0 = 1                если n = 0                       |
//                  a^n = | a * (a^(n - 1))        если n > 0                       |
//                        | значок "^" - возвести в степень                         |
//  НЕ быстро... НО! Процесс можно ускорить:                                        |
//  Есть правило:                                                                   |
//                  a^(b * c) = (a^b)^c = (a^c)^b                                   |
//  Рассмотрим пример:                                                              |
//                  a^(2*k)    =    (a^2)^k, а что теперь такое k?                  |
//                    /\                /\                                          |
//                    ||                ||                                          |
//               из a^(2*k) следует, что k - это число в два раза меньше 2*k        |
//  Теперь переносим на наш изначальный пример:                                     |
//  мы можем представить a^n как (a^2)^(n/2) Таким образов мы можем сократить       |
//  количество рекурсивыных выховов - мы уменьшаем не на единицу а сразу пополам!   |
//                        | a^0 = 1                если n = 0                       |
//                  a^n = | a * (a^(n - 1))        если n > 0 и НЕЧЕТНОЕ            |
//                        | (a^2)^(n/2)            если n > 0 и ЧЕТНОЕ              |
//  Насколько быстрее произойдет подсчет относительно НЕбыстрого возведения?        |
//  Рассмотрим пример 2 в степени 15:                                               |
//  2^15 -> 2^14 -> 2^13 ->2^12 -> 2^11 -> 2^10 ->2^9 ->                            |
//  2^8 -> 2^7 ->2^6 -> 2^5 -> 2^4 -> 2^3 ->2^2 -> 2^1 -> 2^0                       |
//                                                                                  |
//  А теперь тот же пример на БЫСТРОМ возведении:                                   |
//  2^15 -> 2^14 -> 4^7 ->4^6 -> 16^3 -> 16^2 -> 256^1 -> 256^0                     |
//__________________________________________________________________________________|

#include <iostream>

// объявление функции НЕбыстрого возведения в степень
double FastPOW(double inputNumber, int power);

int main(int argc, const char * argv[]) {
    std::cout << "Введите число, которое нужно возвести в степень: ";
        double inputNumber;
        std::cin >> inputNumber;
        std::cout << "Введите степень, в которую нужно возвести число: ";
        int power;
        std::cin >> power;

        std::cout << "Число " << inputNumber << " в степени " <<
               power << " равно " << FastPOW(inputNumber, power);
        std::cout << std::endl;
    
    return 0;
}

double FastPOW(double inputNumber, int power){
    if (power == 0) {
        return 1;
    } else if (power % 2 != 0){     // Если НЕчетное
        return FastPOW(inputNumber, power - 1) * inputNumber;
    } else {                        // Если четное
        return FastPOW(inputNumber * inputNumber, power / 2);
    }
}
