//
//  main.cpp
//
//  cppEdu
//
//  Created by Николай Кутузов on 13.09.2021.
//
//__________________________________________________________________________________
//                          РЕКУРСИЯ на алгоритма Евклида.                          |
//  Нахождение Наибольшего Общего Делителя. НОД(a, b) - если а != 0, а b = 0, тогда |
//  а и есть НОД. Если b > a, a != 0, тогда НОД(b - a, a). Если a > b, тогда        |
//  НОД(a - b, b)Можно упростить и делать НОД(b, a % b).                            |
//  Можно быть уверенным, что a % b всегда меньше b, например, a = 2, b = 5,        |
//  тогда 2 % 5 = 2, а если (b > a) -> a = 5, b = 2, то 5 % 2 = 1, что 2, что       |
//  1 - оба меньше 5. Значит справедливо считать НОД((5, (2 % 5 = 2)) - правильно.  |
//  При этом главное правило: b != 0                                                |
//  В итоги имеем:                                                                  |
//                  | НОД(b, a % b), при b != 0                                     |
//     НОД(a, b) = <                                                                |
//                  |  a, при b = 0                                                 |
//                                                                                  |
//__________________________________________________________________________________|

#include <iostream>
//  Вариант для того, чтобы видеть как вызываются функции из функции:
int64_t factorial(int16_t n)
{
    std::cout << "factorial(" << n << ") is called. \n";
    int64_t result;
    if (n == 0)  // base case:
        result = 1;
     else       // recurrent case:
        result = factorial(n - 1)*n;
    std::cout << "factorial(" << n << ") is exitting.\n";
    return result;
}

int main(int argc, const char * argv[]) {
    std::cout << "Введите число для нахождения факториала: ";
//  Число будет положительным и маленьким, но будет использовать не uint8_t -
//  оно плохо считывается, а именно воспринимается как символ, а не число.
//  Будем использовать uint16_t
    uint16_t inputNumber;
    std::cin >> inputNumber;
    
    std::cout << "Факториал числа [" << inputNumber
            << "] равен: " << factorial(inputNumber);
    std::cout << std::endl;
    return 0;
}
